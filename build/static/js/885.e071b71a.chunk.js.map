{"version":3,"file":"static/js/885.e071b71a.chunk.js","mappings":"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","sources":["assets/deckIcons.svg","components/DeckList.js","page/DeckBuilder.js"],"sourcesContent":["var _path, _path2;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgDeckIcons(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 12,\n    height: 12,\n    viewBox: \"0 0 12 12\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5.69995 3.1001H9.99994C10.7999 3.1001 11.4 3.7001 11.4 4.5001V10.6001C11.4 11.4001 10.7999 12.0001 9.99994 12.0001H5.69995C4.89995 12.0001 4.29993 11.4001 4.29993 10.6001V4.5001C4.29993 3.8001 4.89995 3.1001 5.69995 3.1001Z\",\n    fill: \"#1AFFDE\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5.69995 2.1001H7.89996V2.0001C7.89996 1.2001 7.29994 0.600098 6.49994 0.600098H2.19995C1.39995 0.600098 0.799927 1.2001 0.799927 2.0001V8.1001C0.799927 8.9001 1.39995 9.5001 2.19995 9.5001H3.39996V4.5001C3.29996 3.2001 4.39995 2.1001 5.69995 2.1001Z\",\n    fill: \"#1AFFDE\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDeckIcons);\nexport default __webpack_public_path__ + \"static/media/deckIcons.6faba4989cd9387b8ce1b551b1df783c.svg\";\nexport { ForwardRef as ReactComponent };","import styled from \"styled-components\";\nimport FilterCheckBox from \"./filterCheckbox\";\nimport FilterByNumber from \"./filterByNumber\";\n\nconst Background = styled(\"div\")(\n  ({ visible }) => `\n    display: flex;\n    background-color: rgba(0, 0, 0, 0.9);\n    position: absolute;\n    width: 200px;\n    min-height: 100px;\n    top:150px;\n    right:0;\n    margin-right:0.5rem;\n    z-index:500;\n    flex-direction: column;\n    visibility: ${visible ? \"visible\" : \"hidden\"};\n    opacity: ${visible ? \"1\" : \"0\"};\n    transition: ${\n      visible\n        ? \"visibility 0s, opacity 0.5s linear\"\n        : \"opacity 0s, visibility 0.5s linear\"\n    };\n`\n);\n\nconst Container = styled.div(\n  () => `\n    position: relative\n`\n);\n\nconst TitleText = styled(\"p\")(\n  () => `\n    color: #fff;\n    align-self: center;\n    font-family: Genesis;\n    font-size: 13px;\n`\n);\n\nconst KillsInputContainer = styled(\"div\")(\n  () => `\n    display:flex;\n`\n);\n\nconst Text = styled.div(\n  () => `\n      color: #fff;\n      font-family: Genesis;\n      font-size: 10px;\n  `\n);\n\nconst DeckList = ({ visible = true }) => {\n  return (\n    <Container>\n      <Background visible={visible}>\n        <TitleText>Collections</TitleText>\n        <FilterCheckBox\n          type={\"collection\"}\n          text={\"Apes\"}\n        />\n        <FilterCheckBox\n          type={\"collection\"}\n          text={\"Dudes\"}\n        />\n        <FilterCheckBox\n          type={\"collection\"}\n          text={\"Chickens\"}\n        />\n        <FilterCheckBox\n          type={\"collection\"}\n          text={\"Elves\"}\n        />\n        <FilterCheckBox\n          type={\"collection\"}\n          text={\"Happy Blob Squad\"}\n        />\n        <FilterCheckBox\n          type={\"collection\"}\n          text={\"Killer Kitties\"}\n        />\n        <FilterCheckBox\n          type={\"collection\"}\n          text={\"Owls\"}\n        />\n        <FilterCheckBox\n          type={\"collection\"}\n          text={\"Queens\"}\n        />\n        <FilterCheckBox\n          type={\"collection\"}\n          text={\"Vixens\"}\n        />\n        <FilterCheckBox\n          type={\"collection\"}\n          text={\"Squeegee Gwakkas\"}\n        />\n        <TitleText>Card Type</TitleText>\n        <FilterCheckBox type={\"card\"} text={\"$$\"} />\n        <FilterCheckBox\n          type={\"card\"}\n          text={\"Boss Knocker\"}\n        />\n        <FilterCheckBox\n          type={\"card\"}\n          text={\"Grenade Launcher\"}\n        />\n        <FilterCheckBox\n          type={\"card\"}\n          text={\"Healing\"}\n        />\n        <FilterCheckBox\n          type={\"card\"}\n          text={\"Laser\"}\n        />\n        <FilterCheckBox\n          type={\"card\"}\n          text={\"Revealing\"}\n        />\n        <FilterCheckBox\n          type={\"card\"}\n          text={\"Rocket Launcher\"}\n        />\n        <FilterCheckBox\n          type={\"card\"}\n          text={\"Shielding\"}\n        />\n        <FilterCheckBox\n          type={\"card\"}\n          text={\"Slowing\"}\n        />\n        <FilterCheckBox\n          type={\"card\"}\n          text={\"Sniper\"}\n        />\n        <FilterCheckBox\n          type={\"card\"}\n          text={\"Virus\"}\n        />\n        <TitleText>Special Collection</TitleText>\n        <FilterCheckBox\n          type={\"especial\"}\n          text={\"Starters\"}\n        />\n        <FilterCheckBox\n          type={\"especial\"}\n          text={\"Christmas\"}\n        />\n        <FilterCheckBox\n          type={\"especial\"}\n          text={\"Founders\"}\n        />\n        <FilterCheckBox\n          type={\"especial\"}\n          text={\"Baddies\"}\n        />\n        <TitleText>Kill Count</TitleText>\n        <KillsInputContainer>\n          <FilterByNumber />\n          <Text>To</Text>\n          <FilterByNumber />\n        </KillsInputContainer>\n      </Background>\n    </Container>\n  );\n};\n\nexport default DeckList;\n","import React, { useState, useMemo, useEffect, useContext } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport styled from \"styled-components\";\nimport { Layout } from \"../components/Layout\";\nimport { dummyCards } from \"../dommyData/Marketplace\";\nimport Card from \"../components/card\";\nimport VanityImage1 from \"../assets/vanityImage1.png\";\nimport TowArrow from \"../assets/arrowDoble.svg\";\nimport Arrow from \"../assets/arrowFilter.svg\";\nimport Deck from \"../assets/deckIcons.svg\";\nimport DeckList from \"../components/DeckList\";\nimport FilterByPrice from \"../components/filterByPrice\";\nimport { OPERATION_SAVE_PLACE_API } from \"../config/config\";\nimport Loader from \"../components/loader\";\nimport { UserContext } from \"../context/mainContext\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Contain = styled(Box)({\n  width: \"100%\",\n  zIndex: -1,\n  display: \"flex\",\n  flexDirection: \"row\",\n  justifyContent: \"space-around\",\n});\n\nconst ContainerList = styled(Box)({\n  maxWidth: \"1000px\",\n  width: \"100%\",\n  display: \"grid\",\n  gap: 20,\n  gridTemplateColumns: \"repeat(auto-fill, minmax(200px, 1fr))!important\",\n});\n\nconst TextTitle = styled(\"p\")`\n  color: #ffffff;\n  font-family: \"Genesis\";\n  font-size: 16px;\n  font-weight: 400;\n  text-align: center;\n  margin: 0;\n  @media (max-width: 1000px) {\n    font-size: 14px;\n  }\n  @media (max-width: 500px) {\n    font-size: 10px;\n  }\n`;\n\nconst VanityImageBarNeon = styled(Box)`\n  width: 200px;\n  height: 48px;\n  position: relative;\n  bottom: 5px;\n  @media (max-width: 1000px) {\n    width: 150px;\n  }\n  @media (max-width: 500px) {\n    width: 100px;\n  }\n`;\n\nconst FilterContainer = styled(Box)(\n  () => `\n    display: flex;\n    justify-content: space-evenly;\n    width: 100%;\n    @media (max-width: 1000px) {\n      width: 90%;\n    }\n  `\n);\n\nconst Ico = styled.img(\n  () => `\n  width: 20px;\n  @media (max-width: 1000px) {\n    width: 15px;\n  }\n  @media (max-width: 500px) {\n    width: 10px;\n  }\n`\n);\n\nconst Buttom = styled(Box)(\n  () => `\n  display: flex;\n  cursor: pointer;\n  &:active{\n    opacity: 0.1\n  }\n`\n);\n\nconst ButtomContainer = styled(Box)(\n  () => `\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n);\n\nconst LouderContainer = styled(Box)(\n  () => `\n    margin-top: 10rem;\n    margin-left: 20rem;\n  `\n);\n\nconst CenterContainer = styled.div(\n  () => `\n\n`\n);\n\nconst DeckBuilder = () => {\n  const { token } = useContext(UserContext);\n  const navigate = useNavigate();\n  const [filters, setFilters] = useState([]);\n  const [visibleFilter, setVisibleFilter] = useState(false);\n  const [visibleFilterByPrice, setVisibleFilterByPrice] = useState(false);\n  const [allCards, setCards] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const getAllCards = async () => {\n    setLoading(true);\n    const result = await fetch(\n      `${OPERATION_SAVE_PLACE_API}/card-users/my-cards`,\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    );\n\n    const allCards = await result.json();\n    if (allCards.statusCode === 401) {\n      navigate(\"/\");\n    }\n    setCards(allCards.result.cards);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    getAllCards();\n  }, []);\n\n  return (\n    <Layout notFooter={true}>\n      <Contain>\n        <CenterContainer>\n          <FilterContainer>\n            <ButtomContainer style={{ width: \"80%\", marginLeft: \"13rem\" }}>\n              <TextTitle>Deck Builder</TextTitle>\n              <VanityImageBarNeon component=\"img\" src={VanityImage1} />\n            </ButtomContainer>\n            <ButtomContainer>\n              <Buttom onClick={() => setVisibleFilter((state) => !state)}>\n                <Ico src={Deck} style={{ marginRight: \"0.5rem\" }} />\n                <TextTitle>My Decks</TextTitle>\n              </Buttom>\n              <VanityImageBarNeon component=\"img\" src={VanityImage1} />\n            </ButtomContainer>\n          </FilterContainer>\n          {loading && (\n            <LouderContainer>\n              <Loader isVisible={loading} />\n            </LouderContainer>\n          )}\n          <ContainerList>\n            {allCards.map((item, index) => (\n              <Card\n                key={`${index}-${item.name}-${Math.random()}`}\n                item={{ ...item, index }}\n              />\n            ))}\n          </ContainerList>\n        </CenterContainer>\n      </Contain>\n    </Layout>\n  );\n};\n\nexport default DeckBuilder;\n"],"names":["styled","visible","Contain","Box","width","zIndex","display","flexDirection","justifyContent","ContainerList","maxWidth","gap","gridTemplateColumns","TextTitle","VanityImageBarNeon","FilterContainer","Ico","Buttom","ButtomContainer","LouderContainer","CenterContainer","token","useContext","UserContext","navigate","useNavigate","useState","setVisibleFilter","allCards","setCards","loading","setLoading","getAllCards","fetch","OPERATION_SAVE_PLACE_API","method","headers","Authorization","result","json","statusCode","cards","useEffect","Layout","notFooter","style","marginLeft","component","src","VanityImage1","onClick","state","Deck","marginRight","isVisible","map","item","index","name","Math","random"],"sourceRoot":""}